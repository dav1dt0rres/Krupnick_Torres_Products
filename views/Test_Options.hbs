<h1> Mirza 1.0  </h1>
<body>



<form id ="form" action="/dashboard"  method="get">
    <input type="hidden" id="BookMark" name="BookMark" value="{{BookMark}}"  />
    <input type="hidden" id="Session" name="Session" value="{{Session}}"  />
    <input type="hidden" id="Tests_holder" name="Tests_holder" value="{{Tests_holder}}"  />
    <input type="hidden" id="Test_Type_Holder" name="Test_Type_Holder" value="{{Test_Type_Holder}}"  />
    <input type="hidden" id="Type_Holder" name="Type_Holder" value="{{Type_Holder}}"  />
    <input type="hidden" id="Database_Index" name="Database_Index" value="{{Database_Index}}"  />
    <input type="hidden" id="Load_Tags" name="Load_Tags" value="{{Load_Tags}}"  />
    <input type="hidden" id="Load_Math_Search" name="Load_Math_Search" value="{{Load_Math_Search}}"  />

    <input type="hidden" id="Tag_Holder" name="Tag_Holder" value="{{Tag_Holder}}"  />

    <label id="test_type_label" name="test_type_label">
        Test Type  <------    Pick me First    <--------
        <select onchange="loadTests()" id="Test_Type"  name="Test_Type" value="{{Test_Type}}" >

            <option value="0">Select Test Type</option>
            <option value="ACT-English">ACT-English</option>
            <option value="ACT-Math">ACT-Math</option>
            <option value="ACT-Reading">ACT-Reading</option>
            <option value="ACT-Science">ACT-Science</option>

        </select>
    </label>

    <label id="test_label" name="test_label">
       Test
        <select onchange="additionalOptions()" id = "Test" name="Test" for="Test" value="{{Test}}">
            {{#each Test.options}}
                <option >{{this.text}}</option>
            {{/each}}
        </select>
    </label>


    <label style="display: none;" id="Math_Search_label" name="Math_Search_label">
        Type in any Math tag (Press Enter to search)


            <input id="Math_Search" name="Math_Search" value="{{Math_Search}}" />

    </label>

    <label style="display: none;" id="Tag_List_label" name="Tag_List_label">
        What Tags?
        <select style="display: none;" onchange="load_sub_tags()" id = "Tag_List" name="Tag_List"  value="{{Tag_List}}">
            {{#each Tag_List.options}}
                <option >{{this.text}}</option>
            {{/each}}
        </select>
    </label>
    <label style="display: none;" id="Semi_Tags_Label" name="Semi_Tags_Label">
        What Semi Tag?
        <select style="display: none;" id = "Semi_Tags" name="Semi_Tags"  value="{{Semi_Tags}}">
            {{#each Semi_Tags.options}}
                <option >{{this.text}}</option>
            {{/each}}
        </select>
    </label>
    <label style="display: none;" id ="Number_Questions_label" for="Number_Questions">
        How Many Questions?
        <input style="display: none;"  name="Number_Questions" id="Number_Questions" value="{{Number_Questions}}" >

    </label>
    <label style="display: none;" id ="checkbox_historical_label" for="checkbox_historical">
        Eliminate past Questions that were already answered?
        <input style="display: none;" type="checkbox" name="checkbox_historical" id="checkbox_historical"  value="True">

    </label>


    <label for="Time_Limit_Question">
        Time Limit for each question (secs)
        <input placeholder="Leave Blank if None" id="Time_Limit_Question" name="Time_Limit_Question" value="{{Time_Limit_Question}}"  >
    </label>




    <label for="Time_Limit_Test">
        Time Limit for the entire Test (mins)
        <input placeholder="Leave Blank if None" id="Time_Limit_Test" name="Time_Limit_Test" value="{{Time_Limit_Test}}"  >
    </label>


    <input type="checkbox" name="checkbox_2" id="checkbox_2" value="Clues">Ask for Confidence?<br>

    <label for="FirstName">
        FirstName
        <input id="FirstName" name="FirstName" value="{{FirstName}}" />

    </label>
    <label for="LastName">
        LastName
        <input id="LastName" name="LastName" value="{{LastName}}" />

    </label>
    <label for="Email">
        Email
        <input id="Email" name="Email" value="{{Email}}" />

    </label>


    <button   id="exam_button" name="exam_button" type="submit">Start Exam</button>

</form>
</body>
<script type="text/javascript">

    function additionalOptions(){
        console.log("inside additionaloptions")
        if(document.getElementById("Test").value.includes("Set")){
           console.log("selected the set of 10")

            document.getElementById("Type_Holder").value="LoadTags"

            document.getElementById("form").submit()
        }
    }
    function load_sub_tags(){
        document.getElementById("Type_Holder").value="Load_Sub_Tags"

        document.getElementById("form").submit()
    }
    function loadTests(){
        if(document.getElementById("Type_Holder").value=="Weakness"){
            return;
        }
        document.getElementById("Type_Holder").value="LoadTests"

        document.getElementById("form").submit()
    }
    function showForce_Time(){
        console.log("length "+document.getElementById("Time_Limit_Question").value.length)
        if(document.getElementById("Time_Limit_Question").value.length==0){
            console.log("input is empty here")
            //document.getElementById("checkbox_time_label").style.display="none";
           // document.getElementById("checkbox_time").style.display="none";
        }
        else{
            console.log("Theres an input ")
            //document.getElementById("checkbox_time_label").style.display="block";
           // document.getElementById("checkbox_time").style.display="block";
        }


    }
    function loadTestTypes(){
        if (document.getElementById("Test_Type_Holder").value.length>0){
            console.log("Inside because defualt value for test_type")
            document.getElementById("Test_Type").value = document.getElementById("Test_Type_Holder").value
        }

    }
    function loadTags(){
        if (document.getElementById("Tag_Holder").value.length>0){
            console.log("Inside because defualt value for Tag Holder "+document.getElementById("Tag_Holder").value)
            document.getElementById("Tag_List").value = document.getElementById("Tag_Holder").value
        }

    }
    window.onload = function () {
        console.log("On load windows")

        if(document.getElementById("Load_Tags").value=="true"){
            console.log("Inside loading Tags")
            document.getElementById("Number_Questions_label").style.display="block";
            document.getElementById("Number_Questions").style.display="block";
            document.getElementById("Tag_List").style.display="block";
            document.getElementById("Tag_List_label").style.display="block";
            document.getElementById("checkbox_historical_label").style.display="block";
            document.getElementById("checkbox_historical").style.display="block";
            document.getElementById("Test").value="Set of Questions (Practice Mode)"
            loadTestTypes();
            loadTags();
            document.getElementById("Semi_Tags_Label").style.display="inline-block";
            document.getElementById("Semi_Tags").style.display="inline-block";


            return;
        }
        if(document.getElementById("Load_Math_Search").value=="true"){
            document.getElementById("Number_Questions_label").style.display="block";
            document.getElementById("Number_Questions").style.display="block";
            document.getElementById("Math_Search_label").style.display="block";
            document.getElementById("Math_Search").style.display="block";
            document.getElementById("Test").value="Set of Questions (Practice Mode)"
            document.getElementById("Math_Search").addEventListener("keydown", function(event) {

                // Number 13 is the "Enter" key on the keyboard
                if (event.keyCode === 13) {
                    document.getElementById("Type_Holder").value="Load_Sub_Tags"
                    // Cancel the default action, if needed
                    console.log("submitting Math search results!!!")
                    // Trigger the button element with a click
                    //document.getElementById("form").submit()
                }
            });
            loadTestTypes();
            return;
        }
        if(document.getElementById("Load_Math_Search").value=="results"){
            console.log("Inside loading math results")
            document.getElementById("Number_Questions_label").style.display="block";
            document.getElementById("Number_Questions").style.display="block";
            document.getElementById("Math_Search_label").style.display="block";
            document.getElementById("Math_Search").style.display="block";
            document.getElementById("Semi_Tags_Label").style.display="inline-block";
            document.getElementById("Semi_Tags").style.display="inline-block";


            document.getElementById("Test").value="Set of Questions (Practice Mode)"
            document.getElementById("Math_Search").addEventListener("keydown", function(event) {

                // Number 13 is the "Enter" key on the keyboard
                if (event.keyCode === 13) {
                    document.getElementById("Type_Holder").value="Load_Sub_Tags"
                    // Cancel the default action, if needed
                    console.log("submitting Math search results!!!")
                    // Trigger the button element with a click
                    //document.getElementById("form").submit()
                }
            });
            loadTestTypes();
            return;
        }

        loadTestTypes();




        //console.log("Passage   being copied"+" "+document.getElementById("Passage_Box").value)
        //console.log("after"+" "+document.getElementById("Passage_Box").value)


    };
    function WeaknessFunction(){

    }
</script>
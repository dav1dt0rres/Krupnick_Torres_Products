
<head>

</head>
<body>


<div class="new-year" id="time_x" name="time_x"><span ></span> </div>
<input type="hidden" id="Tag_Holder" name="Tag_Holder" value="{{Tag_Holder}}"  />
<input type="hidden" id="pause_bool" name="pause_bool" value="{{pause_bool}}"  />


<input type="hidden" id="Tag_Holder" name="Tag_Holder" value="{{Tag_Holder}}"  />

<div class="Correct_Answer" id="Correct_Answer" name="Correct_Answer" value="{{Correct_Answer}}"></div>

<input type="hidden" id="Passage_Holder" name="Pasage_Holder" value="{{Passage_Holder}}"  />
<div class="container">
    <div id="backdrop" name="backdrop" class="backdrop">
        <div id ="highlights" name="highlights" class="highlights"></div>
    </div>

    <textarea onscroll="scrollFunction()" id ="Passage_Box" name="Passage_Box" class="Passage_Box" ></textarea>
</div>
</body>

<form id ="form" action="/dashboard/Question_Loop_Weakness"  method="get">
    <input type="hidden" id="Final_Questions_holder" name="Final_Questions_holder" value="{{Final_Questions_holder}}"  />
    <input type="hidden" id="Database_Index" name="Database_Index" value="{{Database_Index}}"  />
    <input type="hidden" id="Tag" name="Tag" value="{{Tag}}"  />
    <input type="hidden" id="Right_Answer" name="Right_Answer" value="{{Right_Answer}}"  />
    <input type="hidden" id="number_checks" name="number_checks" value="{{number_checks}}"  />

    <input type="hidden" id="Question_Number" name="Question_Number" value="{{Question_Number}}"  />
    <div class="container_1">
        <div class="Tag_Display" id="Tag_Display" name="Tag_Display"><span ></span> </div>


        <h4 class="Question_Body_Display" id="Question_Body_Display" name="Question_Body_Display"  ></h4>
        <label for="Answer_A" id="paraA" name="Answer_A" >
            A.)
            <p id="paraA" >{{Answer_A}} </p>

        </label>
        <label for="Answer B" id="paraB" >
            B.)
            <p id="paraB" >{{Answer_B}} </p>

        </label>
        <label for="Answer_C" id="paraC">
            C.)
            <p id="paraC" >{{Answer_C}} </p>

        </label>
        <label for="Answer_D" id="paraD">
            D.)
            <p id="paraD" >{{Answer_D}} </p>

        </label>
        <label for="Answer_E" id="paraE">
            E.)
            <p id="paraE" >{{Answer_E}} </p>

        </label>

        <select id="combo" name="combo">
            <option value="A">A</option>
            <option value="B">B</option>
            <option value="C">C</option>
            <option value="D">D</option>
            <option disabled selected value> -- select an option -- </option>
        </select>
        <button type="button" onclick="checkCorrectAnswer()" >Check if Correct</button>


        <button id="next_question" name="next_question" type="submit" href="#" class="next">Submit(Next Question) &raquo;</button>

        <input type="hidden" id="Time_Limit_Holder" name="Time_Limit_Holder" value="{{Time_Limit_Holder}}"  />
        <ul type="submit" class= "btn-group-bottom" id ="btn-group-ul" name="btn-group-ul" >


        </ul>
    </div>

    <ul class="menu_1">

        <li title="home"><a href="#" id="menu_1-button_home" class="menu_1-button home">menu</a></li>
        <li title="Tagged Questions"><a href="#" id="menu_1-button_tag" class="search"></a></li>
        <li title="Highlighter"><a href="#" class="pencil"></a></li>
        <li title="Display Hints"><a href="#" id="menu_1-button_hint" class="active about"></a></li>

    </ul>

    <ul id="menu_1-bar" class="menu_1-bar">
        <li ><a onclick="HomeFunction()" >Home</a></li>
        <li id="pause" ><a onclick="PauseFunction()">Pause</a></li>
        <li><a onclick="Mark_the_Question()">Mark the Question</a></li>


    </ul>
    <ul id="tagged_question_list" class="menu_1-bar">


    </ul>
    <ul id="hints" class="menu_1-bar">

        <li onclick="giveFirstHint()"><a href="#" >Display 1st Hint</a></li>
        <li><a href="#">Display 2nd Hint</a></li>
        <li><a href="#">Take away Choices</a></li>

    </ul>
    <input type="hidden" id="CheckBox_List" name="CheckBox_List" value="{{CheckBox_List}}"  />
    <input type="hidden" id="Question_Body_Holder" name="Question_Body_Holder" value="{{Question_Body_Holder}}"  />
    <input type="hidden" id="time" name="time" value="{{time}}"  />
    <input type="hidden" id="normal_Question_Index" name="normal_Question_Index" value="{{normal_Question_Index}}"  />
    <input type="hidden" id="Question_Length" name="Question_Length" value="{{Question_Length}}"  />
    <input type="hidden" id="tagged_Questions_holder" name="tagged_Questions_holder" value="{{tagged_Questions_holder}}"  />
    <input type="hidden" id="First_Hint_holder" name="First_Hint_holder" value="{{First_Hint_holder}}"  />
    <input type="hidden" id="Presentation_Holder" name="Presentation_Holder" value="{{Presentation_Holder}}"  />
    <input type="hidden" id="Exit_bool" name="Exit_bool" value="{{Exit_bool}}"  />
</form>




<script type="text/javascript">
    function startTimer(duration, display,time) {
        console.log("Duration "+duration)
        if (duration.length==0){
            return;
        }
        var timer = duration, minutes, seconds;
        var interval=setInterval(function () {
            //console.log("Repeating "+document.getElementById("pause_bool").value)
            if(document.getElementById("pause_bool").value=="false"){
                minutes = parseInt(timer / 60, 10)
                seconds = parseInt(timer % 60, 10);

                minutes = minutes < 10 ? "0" + minutes : minutes;
                seconds = seconds < 10 ? "0" + seconds : seconds;


                display.textContent = minutes + ":" + seconds;
                time.value=minutes + ":" + seconds;
                console.log("time value "+time.value)
                if (--timer < 0) {
                    console.log("inside a minute")

                    if(forceChange()){
                        clearInterval(interval);
                        return true;
                    }
                    display.style.fontSize = "2em";
                    display.style.color="red"
                    //time.css({ 'color': 'red', 'font-size': '150%'})
                    //clearInterval(interval);


                }
            }
        }, 1000);


    }
    function forceChange(){

        if (document.getElementById("CheckBox_List").value.indexOf("True")>=0){
            //console.log("before "+document.getElementById("normal_Question_Index").value)

            document.getElementById("normal_Question_Index").value=(parseInt(document.getElementById("normal_Question_Index").value)+1).toString()
            //console.log("after "+document.getElementById("normal_Question_Index").value)
            document.getElementById("form").submit()
            return true;
        }
        return false;
    }
    function HomeFunction(){
        document.getElementById("Exit_bool").value="true"
        document.getElementById("form").submit()
    }
    function PauseFunction(){
        if(document.getElementById("pause_bool").value=="true"){
            document.getElementById("pause_bool").value="false"
            document.getElementById("pause").innerText="Pause"
        }
        if(document.getElementById("pause_bool").value=="false"){
            document.getElementById("pause_bool").value="true";
            document.getElementById("pause").innerText="Continue"
        }



    }
    function loadButtonsBottom(){

        var ul=document.getElementById("btn-group-ul");
        //console.log("Response: "+document.getElementById("Time_Limit_Holder").value)
        //var index=document.getElementById("normal_Question_Index").value
        if(document.getElementById("Final_Questions_holder").value.split(",").length>1){

            for (var i=1;i<parseInt(document.getElementById("Final_Questions_holder").value.split(",").length);++i){
                //console.log("each question in finals review "+document.getElementById("Final_Questions_holder").value.split(",")[i].split(" ")[0])

                var li=document.createElement("LI");
                li.className="final_review"
                var number=document.getElementById("Final_Questions_holder").value.split(",")[i].split(" ")[0]
                li.innerText=number.toString()
                li.value=number.toString()

                li.onclick=async function(event) {

                    //document.getElementById("normal_Question_Index").value=(parseInt(this.value)).toString()
                    document.getElementById("Final_Questions_holder").value=(parseInt(this.value)).toString()
                    console.log('clicked BUTTON_index '+document.getElementById("normal_Question_Index").value);
                    document.getElementById("form").submit()

                }
                ul.appendChild(li);
            }

            var e = document.getElementById("para"+document.getElementById("Time_Limit_Holder").value);
            e.style.backgroundColor="#CB5C56";
            var correct=document.getElementById("para"+document.getElementById("Right_Answer").value);
            correct.style.backgroundColor="#75E17A"
            //this actually contains the response the User submitted

            return;
        }
        for (var i=0;i<parseInt(document.getElementById("Question_Length").value);++i){
            console.log("Normal Weakness QUestions")
            if(i==parseInt(document.getElementById("normal_Question_Index").value)){
                console.log("changing this button's COLOR "+i)
                var li=document.createElement("LI");
                li.className="highlighted"
                //li.innerText=i.toString()
                li.value=i.toString()
                li.onclick=async function(event) {

                    document.getElementById("normal_Question_Index").value=(parseInt(this.value)).toString()
                    console.log('clicked BUTTON_index '+document.getElementById("normal_Question_Index").value);
                    document.getElementById("form").submit()

                }
            }
            else{
                var li=document.createElement("LI");

                //li.innerText=i.toString()
                li.value=i.toString()
                li.onclick=async function(event) {

                    document.getElementById("normal_Question_Index").value=(parseInt(this.value)).toString()
                    console.log('clicked BUTTON_index '+document.getElementById("normal_Question_Index").value);
                    document.getElementById("form").submit()

                }
            }


            ul.appendChild(li);
        }
    }
    function loadQuestionBody(){
        var question=document.getElementById("Question_Body_Holder");

        var display=document.getElementById("Question_Body_Display");
        display.innerHTML=question.value
    }


    function loadTaggedQuestions(){
        var TaggedList=document.getElementById("tagged_Questions_holder").value.split(",")

        var ul=document.getElementById("tagged_question_list");

        for (var i=0;i<TaggedList.length;++i){
            var li=document.createElement("LI");
            // li.className="tagged_icon"
            li.innerText=TaggedList[i]
            li.value=i
            li.onclick=async function(event) {

                document.getElementById("tagged_Questions_holder").value=this.value
                console.log('clicked!!!! '+document.getElementById("form").submit());

            }

            ul.appendChild(li);
        }


    }

    function checkCorrectAnswer(){
        var e = document.getElementById("combo");
        var answer = e.options[e.selectedIndex].value;

        if (answer ==document.getElementById("Right_Answer").value){
            console.log("Inside "+ answer+" "+document.getElementById("Right_Answer").value)
            document.getElementById("Correct_Answer").style.color="blue";
            document.getElementById("Correct_Answer").style.fontSize="xx-large";
            document.getElementById("Correct_Answer").innerHTML="Correct!";
            //await sleep(2000);
            //document.getElementById("tagged_Questions_holder").value=this.value
            //console.log('clicked!!!! '+document.getElementById("form").submit());

        }
        else{

            document.getElementById("Correct_Answer").innerHTML="InCorrect!";
            document.getElementById("Correct_Answer").style.fontSize="xx-large";
            //await sleep(2000);
            //document.getElementById("tagged_Questions_holder").value=this.value
            //console.log('clicked!!!! '+document.getElementById("form").submit());

        }
    }
    function giveFirstHint(){
        console.log("inside give firstHint")

        var Tag_Holder = document.getElementById("Tag_Holder");
        document.getElementById("Tag_Display").innerHTML=Tag_Holder.value
        //console.log("First Hint Text "+ document.getElementById("First_Hint_holder").value)
        const set1 = new Set([]);
        var Count=0;
        var highlighted_text=document.getElementById("First_Hint_holder").value.split(" ")
        console.log("First Hint Text as a list: "+highlighted_text)
        var text_list=document.getElementById("Passage_Holder").value.split(" ")
        for (var i=0;i<text_list.length;++i){
            //console.log("comparing "+ text_list[i])
            if (highlighted_text.includes(text_list[i])){
                console.log("includes"+" "+text_list[i]+Count)
                ++Count;
                if(Count>2){
                    set1.add(i-1)
                    set1.add(i-2)
                    set1.add(i)

                }
            }
            else{
                Count=0;
            }

        }
        var myArr = Array.from(set1)
        var highlighted_final=""

        //console.log("SET"+" "+text_list[i]);
        //applyHighlights(document.getElementById("Passage_Holder").value)



        document.getElementById("highlights").innerHTML=applyHighlights(document.getElementById("Passage_Box").value.split(" "),myArr)
    }
    function applyHighlights(text_list,myArr){
        var temp_text=text_list.join(" ")
        for (var i=0;i<myArr.length;++i){
            console.log("Highlighting "+text_list[myArr[i]]);
            temp_text=temp_text.replace(/\n$/g, '\n\n').replace(text_list[myArr[i]], '<mark>$&</mark>')
        }
        //return text.replace(/\n$/g, '\n\n').replace(/[A-Z].*?\b/g, '<mark>$&</mark>')
        return temp_text; //should always return a string
    }
    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
    function scrollFunction(){

        console.log("INside the scroll callback (Height) "+" "+document.getElementById("Passage_Box").scrollTop)
        document.getElementById("backdrop").scrollTop=document.getElementById("Passage_Box").scrollTop;
    }
    function showPresentationHighlight(){
        console.log("Inside presentation highlight")
        const set1 = new Set([]);
        var Count=0;
        var highlighted_text=document.getElementById("Presentation_Holder").value.split(" ")
        console.log("PResentation highlight: "+highlighted_text)
        var text_list=document.getElementById("Passage_Holder").value.split(" ")
        for (var i=0;i<text_list.length;++i){
            //console.log("comparing "+ text_list[i])
            if (highlighted_text.includes(text_list[i])){
                //console.log("includes"+" "+text_list[i]+Count)
                ++Count;
                if(Count>2){
                    set1.add(i-1)
                    set1.add(i-2)
                    set1.add(i)

                }
            }
            else{
                Count=0;
            }

        }
        var myArr = Array.from(set1)
        var highlighted_final=""

        document.getElementById("highlights").innerHTML=applyHighlights(document.getElementById("Passage_Box").value.split(" "),myArr)
    }
    window.onload = function () {
        document.getElementById("Exit_bool").value="false"
        document.getElementById("pause_bool").value="false"
        var duration = document.getElementById("Time_Limit_Holder").value
        //var duration = 60 * (1/4),
        var display = document.querySelector('#time_x');
        var time_value=document.querySelector('#time')
        startTimer(duration, display,time_value);
        loadTaggedQuestions();
        loadQuestionBody();
        loadButtonsBottom();
        document.getElementById("menu").style.display="block";

        document.getElementById("Passage_Box").value=document.getElementById("Passage_Holder").value
        //console.log("Passage being copied"+" "+document.getElementById("Passage_Box").value)
        //console.log("after"+" "+document.getElementById("Passage_Box").value)
        showPresentationHighlight();

        var classname=document.getElementById("menu_1-button_home");

        classname.addEventListener("click",function(){
            console.log("inside toggle class")
            var element = document.getElementById("menu_1-bar");
            element.classList.toggle("open") });
        classname=document.getElementById("menu_1-button_tag");
        classname.addEventListener("click",function(){
            console.log("event lister for tagge questions")
            var element = document.getElementById("tagged_question_list");
            element.classList.toggle("open") });
        classname=document.getElementById("menu_1-button_hint");
        classname.addEventListener("click",function(){
            console.log("event lister for tagge questions")
            var element = document.getElementById("hints");
            element.classList.toggle("open") });

    };
</script>